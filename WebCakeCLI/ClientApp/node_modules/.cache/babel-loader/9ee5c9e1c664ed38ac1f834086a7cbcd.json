{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\WebBanhNgot\\\\WebCakeCLI\\\\ClientApp\\\\src\\\\containers\\\\CheckoutContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Checkout from '../components/Checkout/Checkout';\nimport YourOrder from '../components/Checkout/YourOrder';\nimport CustomerInfo from '../components/Checkout/CustomerInfo';\nimport { actPaymentRequest } from './../actions/cart';\n\nclass CheckoutContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = data => {\n      this.setState({\n        id: data.id,\n        name: data.name,\n        phone: data.phone,\n        address: data.address,\n        note: data.note,\n        pay: data.pay\n      });\n    };\n\n    this.showCustomerInfo = () => {\n      return React.createElement(CustomerInfo, {\n        onHandleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    };\n\n    this.showCartItem = cart => {\n      var result = null;\n\n      if (cart.length > 0) {\n        result = cart.map((item, index) => {\n          return React.createElement(YourOrder, {\n            key: index,\n            item: item,\n            index: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n\n    this.showTotalAmount = cart => {\n      var total = 0;\n\n      if (cart.length > 0) {\n        for (var i = 0; i < cart.length; i++) {\n          total += cart[i].product.price * cart[i].quantity;\n        }\n      }\n\n      return total;\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      phone: '',\n      address: '',\n      note: '',\n      pay: ''\n    };\n  }\n\n  render() {\n    var {\n      cart,\n      onPayment\n    } = this.props;\n    return React.createElement(Checkout, {\n      onPayment: onPayment,\n      cart: cart,\n      payment: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.showCustomerInfo(), this.showCartItem(cart));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onPayment: (payment, cart) => {\n      dispatch(actPaymentRequest(payment, cart));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutContainer);","map":{"version":3,"sources":["C:/Users/Admin/Documents/WebBanhNgot/WebCakeCLI/ClientApp/src/containers/CheckoutContainer.js"],"names":["React","Component","connect","Checkout","YourOrder","CustomerInfo","actPaymentRequest","CheckoutContainer","constructor","props","handleChange","data","setState","id","name","phone","address","note","pay","showCustomerInfo","showCartItem","cart","result","length","map","item","index","showTotalAmount","total","i","product","price","quantity","state","render","onPayment","mapStateToProps","mapDispatchToProps","dispatch","payment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Checkout from '../components/Checkout/Checkout';\r\nimport YourOrder from '../components/Checkout/YourOrder';\r\nimport CustomerInfo from '../components/Checkout/CustomerInfo';\r\nimport { actPaymentRequest } from './../actions/cart';\r\n\r\nclass CheckoutContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n            note: '',\r\n            pay: ''\r\n        };\r\n    }\r\n\r\n    render(){\r\n       var { cart, onPayment } = this.props;\r\n        return (\r\n            <Checkout onPayment={onPayment} cart={cart} payment={ this.state}>\r\n               { this.showCustomerInfo()}\r\n                { this.showCartItem(cart)}\r\n            </Checkout>\r\n        );\r\n    }\r\n    \r\n    handleChange = (data) => {\r\n        this.setState({\r\n            id: data.id,\r\n            name: data.name,\r\n            phone: data.phone,\r\n            address: data.address,\r\n            note: data.note,\r\n            pay: data.pay\r\n       });\r\n    };\r\n    \r\n\r\n    showCustomerInfo = () => { \r\n        return (\r\n            <CustomerInfo onHandleChange={this.handleChange}/>\r\n        )\r\n    }\r\n    showCartItem = (cart) => {\r\n        var result = null;\r\n        if(cart.length > 0){\r\n            result = cart.map((item, index) => {\r\n                return (\r\n                    <YourOrder\r\n                        key={index}\r\n                        item={item}\r\n                        index={index}\r\n                    />    \r\n                )\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    showTotalAmount = (cart) => {\r\n        var total = 0;\r\n        if (cart.length > 0) {\r\n            for (var i = 0; i < cart.length; i++) {\r\n                total += cart[i].product.price * cart[i].quantity;\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart: state.cart\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onPayment: (payment,cart) => {\r\n            dispatch(actPaymentRequest(payment, cart));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}