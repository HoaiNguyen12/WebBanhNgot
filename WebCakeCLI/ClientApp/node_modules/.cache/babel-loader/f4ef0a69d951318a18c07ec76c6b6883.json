{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\WebBanhNgot\\\\WebCakeCLI\\\\ClientApp\\\\src\\\\components\\\\Admin\\\\UserManagement\\\\User.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { connect } from 'react-redux';\nimport { actFetchDeleteUserRequest } from '../../../actions/user';\n\nclass User extends Component {\n  DeleteUser(id) {\n    Swal.fire({\n      title: 'Bạn có chắc chắn muốn xóa?',\n      text: \"Sau khi xóa sẽ không thể khôi phục\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Xóa',\n      cancelButtonText: 'Hủy',\n      buttonsStyling: false\n    }).then(result => {\n      if (result.value) {\n        this.props.deleteUser(id);\n        Swal.fire({\n          title: \"Đã xóa\",\n          text: \"Người dùng đã được xóa\",\n          icon: \"success\",\n          timer: 1000,\n          showCancelButton: false,\n          showConfirmButton: false\n        });\n      } else {\n        Swal.fire({\n          title: 'Đã hủy',\n          text: \"Người dùng không được xóa\",\n          icon: \"error\",\n          timer: 1000,\n          showCancelButton: false,\n          showConfirmButton: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.stt + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.user.fullName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.user.userName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.user.userPhone), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.user.userAddress), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.user.isAdmin == 1 ? 'Quản trị' : 'Khách hàng'), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/userForm/\" + this.props.user.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-pencil-square-o fa-2x\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), \"|\", React.createElement(\"i\", {\n      onClick: () => this.DeleteUser(this.props.user.userId),\n      className: \"fa fa-trash-o fa-2x\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nvar mapDispathToProps = (dispatch, props) => {\n  return {\n    deleteUser: id => {\n      dispatch(actFetchDeleteUserRequest(id));\n    }\n  };\n};\n\nexport default connect(null, mapDispathToProps)(User);","map":{"version":3,"sources":["C:/Users/Admin/Documents/WebBanhNgot/WebCakeCLI/ClientApp/src/components/Admin/UserManagement/User.js"],"names":["React","Component","Link","Swal","connect","actFetchDeleteUserRequest","User","DeleteUser","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","buttonsStyling","then","result","value","props","deleteUser","timer","showConfirmButton","render","stt","user","fullName","userName","userPhone","userAddress","isAdmin","userId","mapDispathToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { connect } from 'react-redux';\r\nimport { actFetchDeleteUserRequest } from '../../../actions/user';\r\n\r\nclass User extends Component {\r\n    DeleteUser(id) {\r\n        Swal.fire({\r\n            title: 'Bạn có chắc chắn muốn xóa?',\r\n            text: \"Sau khi xóa sẽ không thể khôi phục\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Xóa',\r\n            cancelButtonText: 'Hủy',\r\n            buttonsStyling: false\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.props.deleteUser(id);\r\n                Swal.fire({\r\n                    title: \"Đã xóa\",\r\n                    text: \"Người dùng đã được xóa\",\r\n                    icon: \"success\",\r\n                    timer: 1000,\r\n                    showCancelButton: false,\r\n                    showConfirmButton: false\r\n                });\r\n            }\r\n            else {\r\n                Swal.fire({\r\n                    title: 'Đã hủy',\r\n                    text: \"Người dùng không được xóa\",\r\n                    icon: \"error\",\r\n                    timer: 1000,\r\n                    showCancelButton: false,\r\n                    showConfirmButton: false\r\n                });\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <th>{this.props.stt + 1}</th>\r\n                <td >{this.props.user.fullName}</td>\r\n                <td >{this.props.user.userName}</td>\r\n                <td >{this.props.user.userPhone}</td>\r\n                <td >{this.props.user.userAddress}</td>\r\n                <td >{this.props.user.isAdmin == 1 ? 'Quản trị' : 'Khách hàng'}</td>\r\n                <td className=\"text-center\">\r\n                    <Link to={\"/userForm/\" + this.props.user.userId}>\r\n                        <i className=\"fa fa-pencil-square-o fa-2x\" aria-hidden=\"true\"></i>\r\n                    </Link>|\r\n                    <i onClick={() => this.DeleteUser(this.props.user.userId)} className=\"fa fa-trash-o fa-2x\" aria-hidden=\"true\"></i>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nvar mapDispathToProps = (dispatch, props) => {\r\n    return {\r\n        deleteUser: (id) => {\r\n            dispatch(actFetchDeleteUserRequest(id));\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispathToProps)(User);"]},"metadata":{},"sourceType":"module"}