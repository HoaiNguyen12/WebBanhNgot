{"ast":null,"code":"import * as types from '../contraints/index';\nimport callApi from '../utils/apiCaller';\nexport const actFetchUsersRequest = () => {\n  return dispatch => {\n    return callApi('users', 'GET', null).then(res => {\n      dispatch(actFetchUsers(res.data));\n    });\n  };\n};\nexport const actFetchUsers = users => {\n  return {\n    type: types.FETCH_USER,\n    users\n  };\n};\nexport const actFetchDeleteUserRequest = id => {\n  return dispatch => {\n    return callApi(\"users/\" + id, \"DELETE\", null).then(res => {\n      dispatch(actFetchDeleteUser(id));\n    });\n  };\n};\nexport const actFetchDeleteUser = id => {\n  return {\n    type: types.DELETE_USER,\n    userId: id\n  };\n};\nexport const actAddUserRequest = user => {\n  return dispatch => {\n    return callApi('users', 'POST', user).then(res => {\n      dispatch(actAddUser(res.data));\n    });\n  };\n};\nexport const actAddUser = user => {\n  return {\n    type: types.ADD_USER,\n    user\n  };\n};\nexport const actGetUserRequest = id => {\n  return dispatch => {\n    return callApi(`users/${id}`, 'GET', null).then(res => {\n      dispatch(actGetUser(res.data));\n    });\n  };\n};\nexport const actGetUser = user => {\n  return {\n    type: types.EDIT_USER,\n    user\n  };\n};\nexport const actUpdateUserRequest = user => {\n  return dispatch => {\n    return callApi(`users/${user.userId}`, 'PUT', user).then(res => {\n      dispatch(actUpdateUser(res.data));\n    });\n  };\n};\nexport const actUpdateUser = user => {\n  return {\n    type: types.UPDATE_USER,\n    user\n  };\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/WebBanhNgot/WebCakeCLI/ClientApp/src/actions/user.js"],"names":["types","callApi","actFetchUsersRequest","dispatch","then","res","actFetchUsers","data","users","type","FETCH_USER","actFetchDeleteUserRequest","id","actFetchDeleteUser","DELETE_USER","userId","actAddUserRequest","user","actAddUser","ADD_USER","actGetUserRequest","actGetUser","EDIT_USER","actUpdateUserRequest","actUpdateUser","UPDATE_USER"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,qBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAGA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtC,SAAQC,QAAD,IAAc;AACjB,WAAOF,OAAO,CAAC,OAAD,EAAS,KAAT,EAAgB,IAAhB,CAAP,CAA6BG,IAA7B,CAAkCC,GAAG,IAAI;AAC5CF,MAAAA,QAAQ,CAACG,aAAa,CAACD,GAAG,CAACE,IAAL,CAAd,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMD,aAAa,GAAIE,KAAD,IAAU;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAET,KAAK,CAACU,UADT;AAEHF,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,yBAAyB,GAAIC,EAAD,IAAQ;AAC7C,SAAQT,QAAD,IAAc;AACjB,WAAOF,OAAO,CAAC,WAAWW,EAAZ,EAAgB,QAAhB,EAA0B,IAA1B,CAAP,CAAuCR,IAAvC,CAA4CC,GAAG,IAAI;AACtDF,MAAAA,QAAQ,CAACU,kBAAkB,CAACD,EAAD,CAAnB,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMC,kBAAkB,GAAID,EAAD,IAAQ;AACtC,SAAO;AACHH,IAAAA,IAAI,EAAET,KAAK,CAACc,WADT;AAEHC,IAAAA,MAAM,EAAEH;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMI,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAOd,QAAQ,IAAI;AACf,WAAOF,OAAO,CAAC,OAAD,EAAU,MAAV,EAAkBgB,IAAlB,CAAP,CAA+Bb,IAA/B,CAAoCC,GAAG,IAAI;AAC9CF,MAAAA,QAAQ,CAACe,UAAU,CAACb,GAAG,CAACE,IAAL,CAAX,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMW,UAAU,GAAID,IAAD,IAAS;AAC/B,SAAO;AACHR,IAAAA,IAAI,EAAET,KAAK,CAACmB,QADT;AAEHF,IAAAA;AAFG,GAAP;AAIH,CALM;AAQP,OAAO,MAAMG,iBAAiB,GAAIR,EAAD,IAAQ;AACrC,SAAOT,QAAQ,IAAI;AACf,WAAOF,OAAO,CAAE,SAAQW,EAAG,EAAb,EAAe,KAAf,EAAsB,IAAtB,CAAP,CAAmCR,IAAnC,CAAwCC,GAAG,IAAI;AAClDF,MAAAA,QAAQ,CAACkB,UAAU,CAAChB,GAAG,CAACE,IAAL,CAAX,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMc,UAAU,GAAIJ,IAAD,IAAU;AAChC,SAAO;AACHR,IAAAA,IAAI,EAAET,KAAK,CAACsB,SADT;AAEHL,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMM,oBAAoB,GAAIN,IAAD,IAAW;AAC3C,SAAOd,QAAQ,IAAI;AACf,WAAOF,OAAO,CAAE,SAAQgB,IAAI,CAACF,MAAO,EAAtB,EAAwB,KAAxB,EAA+BE,IAA/B,CAAP,CAA4Cb,IAA5C,CAAiDC,GAAG,IAAI;AAC3DF,MAAAA,QAAQ,CAACqB,aAAa,CAACnB,GAAG,CAACE,IAAL,CAAd,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMiB,aAAa,GAAIP,IAAD,IAAU;AACnC,SAAO;AACHR,IAAAA,IAAI,EAAET,KAAK,CAACyB,WADT;AAEHR,IAAAA;AAFG,GAAP;AAIH,CALM","sourcesContent":["import * as types from '../contraints/index';\r\nimport callApi from '../utils/apiCaller';\r\n\r\n\r\nexport const actFetchUsersRequest = () => {\r\n    return (dispatch) => {\r\n        return callApi('users','GET', null).then(res => {\r\n            dispatch(actFetchUsers(res.data));\r\n        });\r\n    }; \r\n}\r\n\r\nexport const actFetchUsers = (users) =>{\r\n    return {\r\n        type: types.FETCH_USER,\r\n        users\r\n    };\r\n}\r\n\r\nexport const actFetchDeleteUserRequest = (id) => {\r\n    return (dispatch) => {\r\n        return callApi(\"users/\" + id, \"DELETE\", null).then(res => {\r\n            dispatch(actFetchDeleteUser(id))\r\n        });\r\n    }\r\n}\r\n\r\nexport const actFetchDeleteUser = (id) => {\r\n    return {\r\n        type: types.DELETE_USER,\r\n        userId: id\r\n    }\r\n}\r\n\r\nexport const actAddUserRequest = (user) => {\r\n    return dispatch => {\r\n        return callApi('users', 'POST', user).then(res => {\r\n            dispatch(actAddUser(res.data))\r\n        });\r\n    }\r\n}\r\n\r\nexport const actAddUser = (user) =>{\r\n    return {\r\n        type: types.ADD_USER,\r\n        user\r\n    };\r\n}\r\n\r\n\r\nexport const actGetUserRequest = (id) => {\r\n    return dispatch => {\r\n        return callApi(`users/${id}`,'GET', null).then(res => {\r\n            dispatch(actGetUser(res.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const actGetUser = (user) => {\r\n    return {\r\n        type: types.EDIT_USER,\r\n        user\r\n    }\r\n}\r\n\r\nexport const actUpdateUserRequest = (user)  => {\r\n    return dispatch => {\r\n        return callApi(`users/${user.userId}`,'PUT', user).then(res => {\r\n            dispatch(actUpdateUser(res.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const actUpdateUser = (user) => {\r\n    return {\r\n        type: types.UPDATE_USER,\r\n        user\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}