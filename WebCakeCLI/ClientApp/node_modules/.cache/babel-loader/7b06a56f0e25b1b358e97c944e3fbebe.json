{"ast":null,"code":"import * as types from '../contraints/index';\nvar initState = [];\n\nconst users = (state = initState, action) => {\n  switch (action.type) {\n    case types.FETCH_USER:\n      state = action.users;\n      return [...state];\n\n    case types.DELETE_USER:\n      var index = findUser(state, action.userId);\n\n      if (index != -1) {\n        state.splice(index, 1);\n      }\n\n      return [...state];\n\n    case types.ADD_USER:\n      state.push(action.user);\n      return [...state];\n\n    case types.UPDATE_USER:\n      var index = findUser(state, action.user.userId);\n\n      if (index != -1) {\n        state[index] = action.user;\n      }\n\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nvar findUser = (users, id) => {\n  var index = -1;\n\n  if (users.length > 0) {\n    for (var i = 0; i < users.length; i++) {\n      if (users[i].userId === id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default users;","map":{"version":3,"sources":["C:/Users/Admin/Documents/WebBanhNgot/WebCakeCLI/ClientApp/src/reducers/user.js"],"names":["types","initState","users","state","action","type","FETCH_USER","DELETE_USER","index","findUser","userId","splice","ADD_USER","push","user","UPDATE_USER","id","length","i"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,qBAAvB;AAEA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA+B;AACzC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,KAAK,CAACM,UAAX;AACIH,MAAAA,KAAK,GAAGC,MAAM,CAACF,KAAf;AACA,aAAO,CAAC,GAAGC,KAAJ,CAAP;;AACJ,SAAKH,KAAK,CAACO,WAAX;AACI,UAAIC,KAAK,GAAGC,QAAQ,CAACN,KAAD,EAAQC,MAAM,CAACM,MAAf,CAApB;;AACA,UAAIF,KAAK,IAAI,CAAC,CAAd,EAAiB;AACbL,QAAAA,KAAK,CAACQ,MAAN,CAAaH,KAAb,EAAoB,CAApB;AACH;;AACD,aAAO,CAAC,GAAGL,KAAJ,CAAP;;AACJ,SAAKH,KAAK,CAACY,QAAX;AACIT,MAAAA,KAAK,CAACU,IAAN,CAAWT,MAAM,CAACU,IAAlB;AACA,aAAO,CAAC,GAAGX,KAAJ,CAAP;;AACJ,SAAKH,KAAK,CAACe,WAAX;AACI,UAAIP,KAAK,GAAGC,QAAQ,CAACN,KAAD,EAAQC,MAAM,CAACU,IAAP,CAAYJ,MAApB,CAApB;;AACA,UAAGF,KAAK,IAAI,CAAC,CAAb,EAAe;AACXL,QAAAA,KAAK,CAACK,KAAD,CAAL,GAAeJ,MAAM,CAACU,IAAtB;AACH;;AACD,aAAO,CAAC,GAAGX,KAAJ,CAAP;;AACJ;AACI,aAAO,CAAC,GAAGA,KAAJ,CAAP;AApBR;AAuBH,CAxBD;;AAyBA,IAAIM,QAAQ,GAAG,CAACP,KAAD,EAAQc,EAAR,KAAe;AAC1B,MAAIR,KAAK,GAAG,CAAC,CAAb;;AACA,MAAIN,KAAK,CAACe,MAAN,GAAe,CAAnB,EAAsB;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,KAAK,CAACe,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACnC,UAAIhB,KAAK,CAACgB,CAAD,CAAL,CAASR,MAAT,KAAoBM,EAAxB,EAA4B;AACxBR,QAAAA,KAAK,GAAGU,CAAR;AACA;AACH;AACJ;AACJ;;AACD,SAAOV,KAAP;AACH,CAXD;;AAYA,eAAeN,KAAf","sourcesContent":["import * as types from '../contraints/index';\r\n\r\nvar initState = [];\r\n\r\nconst users = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_USER:\r\n            state = action.users;\r\n            return [...state];\r\n        case types.DELETE_USER:\r\n            var index = findUser(state, action.userId);\r\n            if (index != -1) {\r\n                state.splice(index, 1);\r\n            }\r\n            return [...state];\r\n        case types.ADD_USER:\r\n            state.push(action.user);\r\n            return [...state];\r\n        case types.UPDATE_USER: \r\n            var index = findUser(state, action.user.userId);\r\n            if(index != -1){\r\n                state[index] = action.user;\r\n            }\r\n            return [...state];\r\n        default :\r\n            return [...state]\r\n    }\r\n\r\n}\r\nvar findUser = (users, id) => {\r\n    var index = -1;\r\n    if (users.length > 0) {\r\n        for (var i = 0; i < users.length; i++) {\r\n            if (users[i].userId === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return index;\r\n}\r\nexport default users;"]},"metadata":{},"sourceType":"module"}