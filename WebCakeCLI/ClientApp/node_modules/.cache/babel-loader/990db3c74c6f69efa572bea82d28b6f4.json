{"ast":null,"code":"import * as types from '../contraints/index';\nvar initState = [];\n\nconst bills = (state = initState, action) => {\n  var {\n    bill\n  } = action;\n\n  switch (action.type) {\n    case types.FETCH_BILL:\n      state = action.bills;\n      return [...state];\n\n    case types.UPDATE_STATUS_BILL:\n      var index = findProduct(state, bill.billId);\n      state[index] = bill;\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nvar findProduct = (bills, id) => {\n  var index = -1;\n\n  if (bills.length > 0) {\n    for (var i = 0; i < bills.length; i++) {\n      if (bills[i].billId === id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default bills;","map":{"version":3,"sources":["C:/Users/Admin/Documents/WebBanhNgot/WebCakeCLI/ClientApp/src/reducers/bill.js"],"names":["types","initState","bills","state","action","bill","type","FETCH_BILL","UPDATE_STATUS_BILL","index","findProduct","billId","id","length","i"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,qBAAvB;AAEA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA+B;AACzC,MAAI;AAAEC,IAAAA;AAAF,MAAWD,MAAf;;AACA,UAAQA,MAAM,CAACE,IAAf;AACI,SAAKN,KAAK,CAACO,UAAX;AACIJ,MAAAA,KAAK,GAAGC,MAAM,CAACF,KAAf;AACA,aAAO,CAAC,GAAGC,KAAJ,CAAP;;AACJ,SAAKH,KAAK,CAACQ,kBAAX;AACI,UAAIC,KAAK,GAAGC,WAAW,CAACP,KAAD,EAAQE,IAAI,CAACM,MAAb,CAAvB;AACAR,MAAAA,KAAK,CAACM,KAAD,CAAL,GAAeJ,IAAf;AACA,aAAO,CAAC,GAAGF,KAAJ,CAAP;;AACJ;AACI,aAAO,CAAC,GAAGA,KAAJ,CAAP;AATR;AAYH,CAdD;;AAeA,IAAIO,WAAW,GAAG,CAACR,KAAD,EAAQU,EAAR,KAAe;AAC7B,MAAIH,KAAK,GAAG,CAAC,CAAb;;AACA,MAAIP,KAAK,CAACW,MAAN,GAAe,CAAnB,EAAsB;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAAK,CAACW,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACnC,UAAIZ,KAAK,CAACY,CAAD,CAAL,CAASH,MAAT,KAAoBC,EAAxB,EAA4B;AACxBH,QAAAA,KAAK,GAAGK,CAAR;AACA;AACH;AACJ;AACJ;;AACD,SAAOL,KAAP;AACH,CAXD;;AAYA,eAAeP,KAAf","sourcesContent":["import * as types from '../contraints/index';\r\n\r\nvar initState = [];\r\n\r\nconst bills = (state = initState, action) => {\r\n    var { bill } = action;\r\n    switch (action.type) {\r\n        case types.FETCH_BILL:\r\n            state = action.bills;\r\n            return [...state];\r\n        case types.UPDATE_STATUS_BILL:\r\n            var index = findProduct(state, bill.billId);\r\n            state[index] = bill;\r\n            return [...state];\r\n        default :\r\n            return [...state]\r\n    }\r\n\r\n}\r\nvar findProduct = (bills, id) => {\r\n    var index = -1;\r\n    if (bills.length > 0) {\r\n        for (var i = 0; i < bills.length; i++) {\r\n            if (bills[i].billId === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return index;\r\n}\r\nexport default bills;"]},"metadata":{},"sourceType":"module"}