{"ast":null,"code":"import * as types from '../contraints/index';\nimport callApi from '../utils/apiCaller';\nexport const listAll = () => {\n  return {\n    type: types.GET_ALL_PRODUCT\n  };\n};\nexport const actFetchProductCateGoryRequest = id => {\n  return dispatch => {\n    return callApi(\"category/\" + id, \"GET\", null).then(res => {\n      //console.log(res);\n      dispatch(actFetchProduct(res.data));\n    });\n  };\n};\nexport const actFetchProductCategory = products => {\n  return {\n    type: types.FETCH_PRODUCT,\n    payload: products\n  };\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/Visual Studio 2019/Code Snippets/Visual C#/My Code Snippets/WebBanhNgot/WebCakeCLI/ClientApp/src/actions/product.js"],"names":["types","callApi","listAll","type","GET_ALL_PRODUCT","actFetchProductCateGoryRequest","id","dispatch","then","res","actFetchProduct","data","actFetchProductCategory","products","FETCH_PRODUCT","payload"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,qBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,SAAO;AACHC,IAAAA,IAAI,EAAGH,KAAK,CAACI;AADV,GAAP;AAGH,CAJM;AAOP,OAAO,MAAMC,8BAA8B,GAAIC,EAAD,IAAQ;AAClD,SAAQC,QAAD,IAAc;AACjB,WAAON,OAAO,CAAC,cAAcK,EAAf,EAAmB,KAAnB,EAA0B,IAA1B,CAAP,CAAuCE,IAAvC,CAA4CC,GAAG,IAAI;AACtD;AACAF,MAAAA,QAAQ,CAACG,eAAe,CAACD,GAAG,CAACE,IAAL,CAAhB,CAAR;AACH,KAHM,CAAP;AAIH,GALD;AAMH,CAPM;AASP,OAAO,MAAMC,uBAAuB,GAAIC,QAAD,IAAc;AACjD,SAAO;AACHV,IAAAA,IAAI,EAAGH,KAAK,CAACc,aADV;AAEHC,IAAAA,OAAO,EAAGF;AAFP,GAAP;AAIH,CALM","sourcesContent":["import * as types from '../contraints/index';\r\nimport callApi from '../utils/apiCaller';\r\n\r\nexport const listAll = () => {\r\n    return {\r\n        type : types.GET_ALL_PRODUCT\r\n    }\r\n}\r\n\r\n\r\nexport const actFetchProductCateGoryRequest = (id) => {\r\n    return (dispatch) => {\r\n        return callApi(\"category/\" + id, \"GET\", null).then(res => {\r\n            //console.log(res);\r\n            dispatch(actFetchProduct(res.data))\r\n        });\r\n    }\r\n}\r\n\r\nexport const actFetchProductCategory = (products) => {\r\n    return {\r\n        type : types.FETCH_PRODUCT,\r\n        payload : products\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}